.gpg-functions: &gpg-functions |
  kms_decrypt() {
    payload="$1"
    echo "$payload" | base64 -d | \
    google-cloud-sdk/bin/gcloud kms decrypt \
      --project "$CRYPTOKEYS_PROJECT" \
      --location "europe-west1" \
      --keyring "$CRYPTOKEYS_KEYRING" \
      --key "$KMS_KEY_NAME" \
      --plaintext-file - \
      --ciphertext-file -
  }
# gcloud sdk https://cloud.google.com/sdk/docs/downloads-versioned-archives
.clone-repo-bucket: &clone-repo-bucket |
  yum install python39 wget -y
  wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/$GCLOUD_PACKAGE_VERSION
  echo "$GCLOUD_SHA256SUM $GCLOUD_PACKAGE_VERSION" | sha256sum -c -
  tar xvf $GCLOUD_PACKAGE_VERSION
  ./google-cloud-sdk/install.sh --quiet
  google-cloud-sdk/bin/gcloud auth activate-service-account --key-file "$PACKAGE_SVC_ACC"
  google-cloud-sdk/bin/gsutil -m cp -r "gs://$REPO" .

.gpg-setup: &gpg-setup
  - *gpg-functions
  - yum install gpg -y && mkdir ~/.gnupg
  - echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
  - gpg-connect-agent reloadagent /bye
  - gpg --batch --import <(kms_decrypt "$GPG_KEY" | base64 -d)
  - /usr/libexec/gpg-preset-passphrase --passphrase "$(kms_decrypt $GPG_PASS | base64 -d)" --preset $GPG_KEYGRIP
  - echo "%_signature gpg" > ~/.rpmmacros
  - echo "%_gpg_name $GPG_KEY_ID" >> ~/.rpmmacros

.publish-script: &publish-script |
  yum install -y createrepo_c rpm-sign
  mkdir -p $PASSBOLT_COMPONENT/$PACKAGE_ARCH
  if [ $PASSBOLT_PASSBOLT_COMPONENT == "testing" ]; then
    rm -f $PASSBOLT_COMPONENT/$PACKAGE_ARCH/*rpm
  fi
  cp $PACKAGE_PATH-*.rpm $PASSBOLT_COMPONENT/$PACKAGE_ARCH
  rpm --resign $PASSBOLT_COMPONENT/$PACKAGE_ARCH/*rpm
  createrepo_c --update $PASSBOLT_COMPONENT
  echo "$(kms_decrypt $GPG_PASS | base64 -d)" | gpg --batch --yes --passphrase-fd 0 --detach-sign --armor $PASSBOLT_COMPONENT/repodata/repomd.xml
  google-cloud-sdk/bin/gsutil -m rsync -r -d $PASSBOLT_COMPONENT "gs://$REPO"
  google-cloud-sdk/bin/gsutil -m setmeta -r -h "Content-Type:text/html" \
    -h "Cache-Control:no-cache" \
    "gs://$REPO"

.publish-rpm:
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/rockylinux:9
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
  variables:
    GCLOUD_SHA256SUM: "81d0ad64dca3e97d02e873d386bafcc77b416d7c9b45e5ec2387e5075b133fc0"
    GCLOUD_PACKAGE_VERSION: "google-cloud-sdk-365.0.0-linux-x86_64.tar.gz"
    BUCKET_NAME: "download.passbolt.com"
    EL_VERSION: "el8"
    PACKAGE_ARCH: "noarch"
    PUBLISH_MESSAGE: ":rocket: $API_CLONE_BRANCH $PASSBOLT_FLAVOUR $PASSBOLT_COMPONENT rpm $EL_VERSION package has been published"
  before_script:
    - export CI_COMMIT_TAG="4.8.0-ce-all"
    - source .gitlab-ci/scripts/bin/set-env.sh "$CI_COMMIT_TAG"
    #- if ! $PASSBOLT_PUBLISH; then echo "THIS IS A TESTING RELEASE, NOT PUBLISHING"; exit 0; fi
    - export REPO_PATH="$PASSBOLT_FLAVOUR/rpm/$EL_VERSION"
    - export REPO="$BUCKET_NAME/$REPO_PATH/$PASSBOLT_COMPONENT"
    - if [ -d api ];then cd api; fi
    - *clone-repo-bucket
    - *gpg-setup
  script:
    - *publish-script
    - |
      bash $CI_PROJECT_DIR/.gitlab-ci/scripts/bin/slack-status-messages.sh "$PUBLISH_MESSAGE" "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID"
  retry:
    max: 0


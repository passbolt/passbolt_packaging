services:
  - registry.gitlab.com/passbolt/passbolt-ci-docker-images/dind:latest

.rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "pipeline"'
  before_script:
    - |
      source .gitlab-ci/scripts/bin/set-env.sh "$CI_COMMIT_TAG"
      mv debian/changelog{-$PASSBOLT_FLAVOUR,}
      mv rpm/CHANGELOG{-$PASSBOLT_FLAVOUR,}.md
      cd api
      cp -R ../* . || true

.dependencies:
  image: $PACKAGE_MANAGER_IMAGE
  stage: package-deps
  artifacts:
    paths:
      - $PACKAGE_MANAGER_PATH
    expire_in: 1 days
    when: on_success
  cache:
    paths:
      - $PACKAGE_MANAGER_PATH

composer:
  extends: .dependencies
  rules:
    - if: '$CI_PIPELINE_SOURCE != "pipeline"'
  variables:
    PACKAGE_MANAGER_IMAGE: "registry.gitlab.com/passbolt/passbolt-ci-docker-images/composer:latest"
    PACKAGE_MANAGER_PATH: api/vendor/
  artifacts:
    paths:
      - api
  script:
    - |
      source .gitlab-ci/scripts/bin/set-env.sh "$CI_COMMIT_TAG"
      git clone -b ${API_CLONE_BRANCH} https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/passbolt/passbolt-${PASSBOLT_FLAVOUR}-api.git api
      cd api
      composer install --prefer-dist -o --no-dev --ignore-platform-reqs --no-interaction

build-debian:
  extends: .rules
  image: registry.gitlab.com/passbolt/passbolt-ci-docker-images/debian-bullseye-11-slim:latest
  stage: package-build
  dependencies:
    - composer
  artifacts:
    paths:
      - "api/*.deb"
      - "api/*.build"
      - "api/*.buildinfo"
      - "api/*.changes"
    expire_in: 1 week
    when: on_success
  script:
    - |
      apt-get update
      apt-get install -y git-buildpackage devscripts apt-utils debconf-utils fakeroot equivs cdbs
      if [[ "$PASSBOLT_COMPONENT" == "testing" ]]; then
        gbp dch --snapshot --snapshot-number=$(date +%s) --ignore-branch
      fi
      make -f debian/rules debian/control
      mk-build-deps -irt'apt-get --no-install-recommends -yV' debian/control
      dpkg-checkbuilddeps
      debuild --preserve-envvar PASSBOLT_FLAVOUR --preserve-envvar PASSBOLT_COMPONENT -us -uc -b -i -I
      cp ../*.deb .
      cp ../*.build .
      cp ../*.buildinfo .
      cp ../*.changes .

.publish-apt:
  image: registry.gitlab.com/passbolt/passbolt-ops/passbolt-aptly
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
  dependencies:
    - build-debian
  script:
    - |
      source .gitlab-ci/scripts/bin/set-env.sh "$CI_COMMIT_TAG"
      export PREFIX=$PASSBOLT_FLAVOUR/$DISTRIBUTION_REPO_DIR
      cd api && /publisher.sh
  retry:
    max: 0

publish-debian:
  extends: .publish-apt
  variables:
    DISTRIBUTION: buster
    DISTRIBUTION_REPO_DIR: debian
  needs:
    - job: "debian-buster-runtime"
    - job: "debian-buster-break"
    - job: "debian-buster-purge"
    - job: "debian-buster-fs"
    - job: "debian-bullseye-runtime"
    - job: "debian-bullseye-break"
    - job: "debian-bullseye-purge"
    - job: "debian-bullseye-fs"
    - job: "build-debian"

publish-ubuntu:
  extends: .publish-apt
  variables:
    DISTRIBUTION: focal
    DISTRIBUTION_REPO_DIR: ubuntu
  needs:
    - job: "ubuntu-2004-runtime"
    - job: "ubuntu-2004-break"
    - job: "ubuntu-2004-purge"
    - job: "ubuntu-2004-fs"
    # - job: "ubuntu-2204-runtime"
    # - job: "ubuntu-2204-break"
    # - job: "ubuntu-2204-purge"
    # - job: "ubuntu-2204-fs"
    - job: "build-debian"

services:
  - registry.gitlab.com/passbolt/passbolt-ci-docker-images/dind:latest

.rules:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(snyk-fix*|feature\/debian\_*|master|release)/ || ($CI_COMMIT_BRANCH == "develop" && $CI_PIPELINE_SOURCE == "schedule")'
      when: on_success

.dependencies:
  extends: .rules
  image: $PACKAGE_MANAGER_IMAGE
  stage: package-deps
  artifacts:
    paths:
      - $PACKAGE_MANAGER_PATH
    expire_in: 1 days
    when: on_success
  cache:
    paths:
      - $PACKAGE_MANAGER_PATH

composer:
  extends: .dependencies
  variables:
    PACKAGE_MANAGER_IMAGE: "registry.gitlab.com/passbolt/passbolt-ci-docker-images/composer:latest"
    PACKAGE_MANAGER_PATH: vendor/
  script:
    - |
      composer install --prefer-dist -o --no-dev --ignore-platform-reqs --no-interaction

build-debian:
  extends: .rules
  image: registry.gitlab.com/passbolt/passbolt-ci-docker-images/debian-bullseye-11-slim:latest
  stage: package-build
  variables:
    PASSBOLT_COMPONENT: stable
  dependencies:
    - composer
  artifacts:
    paths:
      - '*.deb'
      - '*.build'
      - '*.buildinfo'
      - '*.changes'
    expire_in: 1 week
    when: on_success
  script:
    - |
      apt-get update
      apt-get install -y git-buildpackage devscripts apt-utils debconf-utils fakeroot equivs cdbs
      if [[ ! -z $NIGHTLY || $CI_COMMIT_BRANCH =~ ^(develop|feature\/debian\_*) ]]; then
        export PASSBOLT_COMPONENT=testing
        gbp dch --snapshot --snapshot-number=$(date +%s) --ignore-branch
      fi
      make -f debian/rules debian/control
      mk-build-deps -irt'apt-get --no-install-recommends -yV' debian/control
      dpkg-checkbuilddeps
      debuild --preserve-envvar PASSBOLT_FLAVOUR --preserve-envvar PASSBOLT_COMPONENT -us -uc -b -i -I
      cp ../*.deb .
      cp ../*.build .
      cp ../*.buildinfo .
      cp ../*.changes .

.publish:
  image: registry.gitlab.com/passbolt/passbolt-ops/passbolt-aptly
  stage: publish
  dependencies:
    - build-debian
  script:
    - /publisher.sh

debian-testing:
  extends: .publish
  variables:
    DISTRIBUTION: buster
    PASSBOLT_COMPONENT: testing
    PREFIX: $PASSBOLT_FLAVOUR/debian
    NIGHTLY: "true"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success

debian-stable:
  extends: .publish
  variables:
    DISTRIBUTION: buster
    PASSBOLT_COMPONENT: stable
    PREFIX: $PASSBOLT_FLAVOUR/debian
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /publish-package/ && $CI_COMMIT_BRANCH == "release"'
      when: on_success

ubuntu-testing:
  extends: .publish
  variables:
    DISTRIBUTION: focal
    PASSBOLT_COMPONENT: testing
    PREFIX: $PASSBOLT_FLAVOUR/ubuntu
    NIGHTLY: "true"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: on_success

ubuntu-stable:
  extends: .publish
  variables:
    DISTRIBUTION: focal
    PASSBOLT_COMPONENT: stable
    PREFIX: $PASSBOLT_FLAVOUR/ubuntu
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /publish-package/ && $CI_COMMIT_BRANCH == "release"'
      when: on_success
